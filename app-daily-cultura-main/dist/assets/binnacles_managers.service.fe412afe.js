import{H as $,r as b,u as h,P as i,K as p,Q as r,E as w}from"./index.c93647e1.js";const d="binnacleManagers",l="api/v1";function C(){const u=$({all:[],one:{},count_page:0}),v=h(),c=b("");return{data:u,errors:c,get:async(s,n=null)=>{var e;try{i(!0);let a=Boolean(n)?`?page=${s}&${n}`:`?page=${s}`,o=await p.get(`/${l}/${d}${a}`).finally(()=>{i(!1)});o.status===200&&(u.all=o.data.items,u.count_page=o.data.count_page)}catch(a){r.custom_validation((e=a.response.data.error)!=null?e:a.response.data.message)}},getOne:async s=>{var n;try{i(!0);let e=await p.get(`/${l}/${d}/${s}`).finally(()=>{i(!1)});return e.status===200&&(u.one=e.data.items),e}catch(e){e.response.status===404?w.not_found_by_id():r.custom_validation((n=e.response.data.error)!=null?n:e.response.data.message)}},update:async(s,n,e)=>{c.value="";const a=new FormData,{development_activity_image:o,evidence_participation_image:_,aforo_file:m,beneficiary_id:y,...f}=n;for(const[t,g]of Object.entries(f))a.append(t,g);a.append("updated_from",e),a.append("beneficiary_id",JSON.stringify(y)),a.append("development_activity_image",o),a.append("evidence_participation_image",_),a.append("aforo_file",m);try{i(!0),(await p.post(`/${l}/${d}/${s}`,a,{"Content-Type":"multipart/form-data"}).finally(()=>{i(!1)})).status===200&&(r.update(),e=="gestor"?v.push({name:"binnacleManagers.index"}):e=="monitor"&&v.push({name:"binnacles.index"}))}catch(t){c.value=t.response.data.errors}},create:async(s,n)=>{var f;c.value="";const e=new FormData,{development_activity_image:a,evidence_participation_image:o,aforo_file:_,beneficiary_id:m,...y}=s;for(const[t,g]of Object.entries(y))e.append(t,g);e.append("created_from",n),e.append("beneficiary_id",JSON.stringify(m)),e.append("development_activity_image",a),e.append("evidence_participation_image",o),e.append("aforo_file",_);try{i(!0);const t=await p.post(`/${l}/${d}`,e,{"Content-Type":"multipart/form-data"}).finally(()=>{i(!1)});return t.status===200&&t.data.success&&r.create(),t}catch(t){r.custom_validation((f=t.response.data.error)!=null?f:t.response.data.message)}},destroy:async s=>{try{i(!0),(await p.delete(`/${l}/${d}/${s}`).finally(()=>{i(!1)})).status==200&&r.destroy("Bit\xE1cora",s)}catch(n){c.value=n.response.data.errors}}}}export{C as B};
